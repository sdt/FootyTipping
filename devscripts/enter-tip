#!/usr/bin/env perl
use Modern::Perl;
use Try::Tiny;

use Getopt::Lazy
    'username=s'     => 'Login name                 (required)',
    'compname=s'     => 'Competition name           (required)',
    'round=n'        => 'Round                      (required)',
    'team=s'         => 'Team                       (required)',
    -summary => 'Enter a tip for a user',
    -usage => '%c %o',
    ;

use Tipping::Schema ();

GetOptions(-autohelp => sub {
        grep { !defined } ($username, $compname, $round, $team)
    });

my $schema = Tipping::Schema->connect;
my $membership = $schema->resultset('Membership')->find(
    {
        'member.username'    => $username,
        'competition.name' => $compname,
    },
    {
        prefetch => [qw/ competition member /],
    }
);
if (not $membership) {
    if (not $schema->resultset('User')->find({ username => $username })) {
        die "User $username not found\n";
    }
    if (not $schema->resultset('Competition')->find({ name => $compname })) {
        die "Competition $compname not found\n";
    }
    die "User $username is not a member of competition $compname\n";
}

my $gt = $schema->resultset('Game_Team')->find(
    {
        'game.round'    => $round,
        'team.name'     => $team,
    },
    {
        prefetch => [qw/ game team /],
    }
);

my $done;
do {
    $done = 1;
    try {
        $schema->resultset('Tip')->create({
            membership_id    => $membership->membership_id,
            submitter_id     => $membership->user_id,
            game_id          => $gt->game_id,
            home_team_to_win => $gt->is_home_team,
        });
    }
    catch {
        if (/columns .* are not unique/) {
            say STDERR "sleeping before retry...";
            sleep 1;
            $done = 0;
        }
        else {
            die $_;
        }
    };
} while (! $done);
